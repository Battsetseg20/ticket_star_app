= form_with model: event_item, url: event_items_path, local: true do |form|
  - if event_item.errors.any?
    .error-messages
      h3 Errors
      ul
        - event_item.errors.full_messages.each do |message|
          li = message

  .form-group
    = form.label :title
    = form.text_field :title, class: 'form-control', required: true

  .form-group
    = form.label :description
    = form.text_area :description, class: 'form-control', required: true
  
  .form-group
    = form.label :event_type, "Event Type"
    = form.select :event_type, EventItem.event_types.keys.map { |key| [key.humanize, key] }, {}, class: 'form-control', required: true

  .form-group
    = form.label :date
    = form.date_field :date, class: 'form-control', required: true

  .form-group
    = form.label :time
    = form.time_field :time, class: 'form-control', required: true

  .form-group
    = form.label :location
    = form.text_field :location, class: 'form-control', required: true

  .form-group
    = form.label :status
    = form.select :status, EventItem.statuses.keys.select { |status| ['draft', 'published'].include?(status) }.map { |key| [key.humanize, key] }, {}, class: 'form-control', required: true

  
  .form-group
    = form.label :image
    = form.file_field :image, class: 'form-control', required: true, multipart: true

  / Fields for ticket attributes
  = form.fields_for :ticket do |ticket_fields|
    .form-group
      = ticket_fields.label :price
      = ticket_fields.text_field :price, class: 'form-control',  step: '0.01', min: '0', required: true

    .form-group
      = ticket_fields.label :quantity_available
      = ticket_fields.number_field :quantity_available, class: 'form-control', min: '0', step: '1', required: true

  = form.submit 'Create Event', class: 'btn btn-primary'
